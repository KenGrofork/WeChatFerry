name: Build Clients

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  build-go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16'
        
      - name: Install MinGW
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64

      - name: Build Go client
        working-directory: ./clients/go
        run: |
          export GOOS=windows
          export GOARCH=amd64
          go build -ldflags="-s -w" -o go_wcf_http3.9.10.27.exe main.go

      - name: Package Go client
        run: |
          mkdir -p temp/go
          mv clients/go/go_wcf_http3.9.10.27.exe temp/go/

  build-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build Java client
        working-directory: ./clients/java
        run: |
          ./gradlew build
          # Assuming the Java build produces a jar file, you might need a way to convert it to exe if necessary
          # mv build/libs/your-java-client.jar ../dist/java_client.jar

      - name: Package Java client
        run: |
          mkdir -p temp/java
          # Adjust the path below based on the actual output of your build
          mv clients/java/build/libs/*.jar temp/java/

  build-node:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        working-directory: ./clients/node
        run: npm install

      - name: Build Node.js client
        working-directory: ./clients/node
        run: pkg . --targets node14-win-x64 --output go_wcf_http3.9.10.27.exe

      - name: Package Node.js client
        run: |
          mkdir -p temp/node
          mv clients/node/go_wcf_http3.9.10.27.exe temp/node/

  build-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        working-directory: ./clients/python
        run: pip install -r requirements.txt

      - name: Build Python client
        working-directory: ./clients/python
        run: pyinstaller --onefile main.py --name go_wcf_http3.9.10.27

      - name: Package Python client
        run: |
          mkdir -p temp/python
          mv clients/python/dist/go_wcf_http3.9.10.27.exe temp/python/

  build-rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build Rust client
        working-directory: ./clients/rust
        run: |
          rustup target add x86_64-pc-windows-gnu
          cargo build --release --target x86_64-pc-windows-gnu
          mv target/x86_64-pc-windows-gnu/release/go_wcf_http3.9.10.27.exe .

      - name: Package Rust client
        run: |
          mkdir -p temp/rust
          mv clients/rust/go_wcf_http3.9.10.27.exe temp/rust/

  package-all:
    runs-on: ubuntu-latest
    needs: [build-go, build-java, build-node, build-python, build-rust]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Package all clients
        run: |
          mkdir -p packages
          cd temp
          for dir in */; do
            zip -r "../packages/${dir%/}.zip" "$dir"
          done
          cd ..
          ls packages
